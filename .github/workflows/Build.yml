name: Build.yml
on:
  workflow_call:
    inputs:
      build_mode:
        type: string
        required: true
        default: "beta"
        description: "构建模式，release | beta"
      branch:
        type: string
        required: true
        description: "选择要构建的分支"
jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
            platform_name: "macos-arm64"
            upload_path: "App/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg"
            webview_target: "WKWebView"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
            platform_name: "macos-x86_64"
            upload_path: "App/src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg"
            webview_target: "WKWebView"
          - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
            platform_name: "linux-x86_64"
            upload_path: "App/src-tauri/target/release/bundle/appimage/*.AppImage"
            webview_target: "WebKitGTK"
          - platform: "windows-latest"
            args: ""
            platform_name: "windows-x86_64"
            upload_path: "App/src-tauri/target/release/bundle/nsis/*.exe"
            webview_target: "webview2"

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false
      - name: setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"
      - name: install dependencies
        run: pnpm install
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./App/src-tauri -> target"
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.
      # 数据处理-Beta
      - name: Set Loglevel - Beta
        if: inputs.build_mode == 'beta'
        run: node .github/scripts/processLoglevelToTrace.js
      # Build for beta
      - name: Build - beta
        if: inputs.build_mode == 'beta'
        uses: tauri-apps/tauri-action@v0
        env:
          WEBVIEW_TARGET: ${{ matrix.webview_target }}
        with:
          args: ${{ matrix.args }}
          projectPath: "./App/"
      - name: Upload Build - beta
        if: inputs.build_mode == 'beta'
        uses: actions/upload-artifact@v4
        with:
          name: TechClass-Beta-${{ matrix.platform_name }}
          if-no-files-found: ignore
          include-hidden-files: "false"
          path: ${{ matrix.upload_path }}
          retention-days: 30
